import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,b as a,o as l}from"./app-B37NkK81.js";const o={};function t(n,e){return l(),s("div",null,e[0]||(e[0]=[a(`<h4 id="什么是docker" tabindex="-1"><a class="header-anchor" href="#什么是docker"><span><span class="note note-info">什么是Docker?</span></span></a></h4><blockquote><p><a href="https://www.docker.com/" target="_blank" rel="noopener noreferrer">Docker</a> 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的<a href="https://baike.baidu.com/item/%E9%95%9C%E5%83%8F/1574?fromModule=lemma_inlink" target="_blank" rel="noopener noreferrer">镜像</a>中，然后发布到任何流行的 Linux或Windows操作系统的机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。</p></blockquote><h4 id="安装docker" tabindex="-1"><a class="header-anchor" href="#安装docker"><span><span class="note note-success">安装Docker</span></span></a></h4><ol><li><p>安装<code>yum-utils</code>,其提供了<code>yum-config-manager</code>工具,用于配置管理</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yum-utils</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>添加Docker下载仓库</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #官网仓库，此地址为官方的仓库地址，在国内建议不要用</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> yum-config-manager</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    --add-repo</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    https://download.docker.com/linux/centos/docker-ce.repo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #国内阿里云仓库</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> yum-config-manager</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 	--add-repo</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  	http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker-ce</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker-ce-cli</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> containerd.io</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker-compose-plugin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Docker启动</p><p><code>systemctl start docker</code></p></li><li><p>启动成功测试</p><p><code>docker version</code></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Client:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Engine</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Community</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Version:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">           24.0.6</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> ......</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Server:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Engine</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Community</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Engine:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  Version:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">          24.0.6</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  ......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重启Docker</p><p><code>systemctl restart docker</code></p></li><li><p>查看Docker状态</p><p><code>systemctl status docker</code></p></li><li><p>开机自启动</p><p><code>systemctl enable docker</code></p></li><li><p>Docker停止</p><p><code>systemctl stop docker</code></p></li><li><p>关闭开机自启动</p><p><code>systemctl disable docker</code></p></li></ol><h4 id="docker镜像相关命令" tabindex="-1"><a class="header-anchor" href="#docker镜像相关命令"><span><span class="note note-primary">Docker镜像相关命令</span></span></a></h4><ol><li><p><code>docker pull</code></p><blockquote><p>可以将指定镜像从docker hub 拉取到本地</p><p>用法 ：<code>docker pull [OPTIONS] NAME[:TAG|@DIGEST]</code></p><p><code>OPTIONS：-q</code>:简化日志输出</p></blockquote></li><li><p><code>docker images</code></p><blockquote><p>可以查看本地所有镜像资源信息，按创建时间排序</p><p>用法：<code>docker images [OPTIONS] [REPOSITORY[:TAG]]</code></p><p><code>OPTIONS：-q</code>:仅显示镜像的Image ID</p><p><code>OPTIONS：-f</code>:过滤指定条件的镜像</p><table><thead><tr><th>REPOSITORY</th><th>TAG</th><th>IMAGE ID</th><th>CREATED</th><th>SIZE</th></tr></thead><tbody><tr><td>仓库名称</td><td>版本号</td><td>唯一标识</td><td>创建时间</td><td>镜像大小</td></tr></tbody></table></blockquote></li><li><p><code>docker search</code></p><blockquote><p>从docker hub上查看指定名称的镜像</p><p>用法：<code>docker search [OPTIONS] TERM</code></p><p><code>OPTIONS：--limit</code>:指定显示结果的数量</p></blockquote></li><li><p><code>docker rmi</code></p><blockquote><p>删除指定的本地镜像,可以指定多个一次性删除</p><p>用法：<code>docker rmi [OPTIONS] IMAGE [IMAGE...]</code></p><p><code>OPTIONS：-f</code>:强制删除，包括已经运行的</p><p>镜像通过<code>&lt;repository&gt;:&lt;tag&gt;</code>指定，没有<code>tag</code>，则默认是<code>latest</code>版本</p></blockquote></li><li><p><code>docker save</code></p><blockquote><p>将一个或多个镜像导出为tar文件</p><p>用法：<code>docker save [OPTIONS] IMAGE [IMAGE...]</code></p></blockquote></li><li><p><code>docker load</code></p><blockquote><p>将一个tar文件导入并加载为一个或多个镜像</p><p>用法：<code>docker load [OPTIONS]</code></p></blockquote></li></ol><h4 id="docker容器" tabindex="-1"><a class="header-anchor" href="#docker容器"><span><span class="note note-danger">Docker容器</span></span></a></h4><ol><li><p><code>docker run</code></p><blockquote><p>创建容器并启动</p><p>用法：<code>docker run [OPTIONS] IMAGE [COMMAND] [ARG...]</code></p><p><code>Options:</code></p><p><code>--name string</code> 指定当前容器名称</p><p><code>-it</code> 以交互模式运行容器，且为容器分配一个伪终端</p><p><code>/bin/bash</code> 指定容器启动后需要运行的命令是/bin/bash</p><p><code>-d</code> 以分离模式运行容器</p><p><code>-p</code> 设置容器端口</p></blockquote></li><li><p><code>docekr create</code></p><blockquote><p>仅创建容器但不启动</p><p>用法：<code>docker create [OPTIONS] IMAGE [COMMAND] [ARG...]</code></p><p>与<code>docker run</code>类似，但没有<code>-d</code>选项</p></blockquote></li><li><p><code>exit</code></p><blockquote><p>退出并停止容器（交互模式）</p></blockquote></li><li><p><code>Ctrl + P + Q</code></p><blockquote><p>退出不停止容器（交互模式）</p></blockquote></li><li><p><code>docker ps</code></p><blockquote><p>查看所有正在运行的容器</p><p>用法：<code>docker ps [OPTIONS]</code></p><p><code>Options:</code></p><p><code>-a</code> 查看所有容器，无论运行状态</p><p><code>-q</code> 查看容器ID</p><p><code>-l</code> 查看最后创建的容器</p><p><code>-n</code> 查看最后创建的n个容器</p></blockquote></li><li><p><code>docker exec</code></p><blockquote><p>进入正在运行的容器内部</p><p>用法：<code>docker exec [OPTIONS] CONTAINER COMMAND [ARG...]</code></p></blockquote></li></ol>`,8)]))}const p=i(o,[["render",t],["__file","Docker.html.vue"]]),r=JSON.parse('{"path":"/posts/Docker.html","title":"Docker学习笔记","lang":"zh-CN","frontmatter":{"title":"Docker学习笔记","tags":"Docker","categories":"Docker","abbrlink":4126800539,"date":"2023-10-14T23:35:53.000Z","description":"什么是Docker? Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Windows操作系统的机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。 安装Docker 安装yum-utils,其提供了yum-config-manager工具,用于配置...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://xupan.fun/posts/Docker.html"}],["meta",{"property":"og:site_name","content":"苏禾的博客"}],["meta",{"property":"og:title","content":"Docker学习笔记"}],["meta",{"property":"og:description","content":"什么是Docker? Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Windows操作系统的机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。 安装Docker 安装yum-utils,其提供了yum-config-manager工具,用于配置..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2023-10-14T23:35:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker学习笔记\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-14T23:35:53.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"苏禾\\",\\"url\\":\\"https://xupan.fun\\",\\"email\\":\\"xp0920ww@163.com\\"}]}"]]},"headers":[],"readingTime":{"minutes":2.72,"words":815},"filePathRelative":"posts/Docker.md","localizedDate":"2023年10月15日","excerpt":"<h4><span class=\\"note note-info\\">什么是Docker?</span></h4>\\n<blockquote>\\n<p><a href=\\"https://www.docker.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Docker</a> 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的<a href=\\"https://baike.baidu.com/item/%E9%95%9C%E5%83%8F/1574?fromModule=lemma_inlink\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">镜像</a>中，然后发布到任何流行的 Linux或Windows操作系统的机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。</p>\\n</blockquote>","autoDesc":true}');export{p as comp,r as data};
